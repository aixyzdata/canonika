version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: canonika_postgres
    environment:
      POSTGRES_USER: canonika
      POSTGRES_PASSWORD: canonika
      POSTGRES_DB: canonika
    ports:
      - "7700:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: canonika_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@canonika.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "7715:80"
    depends_on:
      - postgres

  redis:
    image: redis:7
    container_name: canonika_redis
    ports:
      - "7701:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: canonika_rabbitmq
    ports:
      - "7702:5672"
      - "7703:15672"

  milvus:
    image: milvusdb/milvus:v2.3.9
    container_name: canonika_milvus
    ports:
      - "7704:19530"
      - "7705:9091"
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      PULSAR_ADDRESS: pulsar://pulsar:6650
    depends_on:
      - etcd
      - minio
      - pulsar

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: canonika_etcd
    environment:
      ETCD_AUTO_COMPACTION_MODE: revision
      ETCD_AUTO_COMPACTION_RETENTION: 1000
      ETCD_QUOTA_BACKEND_BYTES: 4294967296
    ports:
      - "7706:2379"

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: canonika_minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data
    ports:
      - "7707:9000"

  pulsar:
    image: apachepulsar/pulsar:2.10.2
    container_name: canonika_pulsar
    command: bin/pulsar standalone
    ports:
      - "7708:6650"
      - "7709:8080"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: canonika_elastic
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "7710:9200"
      - "7711:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: canonika_kibana
    ports:
      - "7712:5601"
    depends_on:
      - elasticsearch

  n8n:
    image: n8nio/n8n:1.41.0
    container_name: canonika_n8n
    ports:
      - "7713:5678"
    environment:
      - GENERIC_TIMEZONE=America/Sao_Paulo



  # Placeholders para microservi√ßos Canonika
  harbor:
    build: ./harbor
    container_name: canonika_harbor
    ports:
      - "7721:80"
    depends_on:
      - postgres
      - redis
      - rabbitmq

  skipper:
    build: ./skipper
    container_name: canonika_skipper
    ports:
      - "7722:80"
    depends_on:
      - postgres
      - redis
      - rabbitmq

  wayfinder:
    build: ./wayfinder
    container_name: canonika_wayfinder
    ports:
      - "7723:80"
    depends_on:
      - milvus

  mapmaker:
    build: ./mapmaker
    container_name: canonika_mapmaker
    ports:
      - "7724:80"
    depends_on:
      - postgres

  quartermaster:
    build: ./quarter
    container_name: canonika_quartermaster
    ports:
      - "7725:80"
    depends_on:
      - postgres
      - elasticsearch

  ledger:
    build: ./ledger
    container_name: canonika_ledger
    ports:
      - "7726:80"
    depends_on:
      - postgres

  seagull:
    build: ./seagull
    container_name: canonika_seagull
    ports:
      - "7727:80"
    depends_on:
      - postgres

  beacon:
    build: ./beacon
    container_name: canonika_beacon
    ports:
      - "7728:80"
    depends_on:
      - postgres

  dock:
    build: ./dock
    container_name: canonika_dock
    ports:
      - "7729:80"
    depends_on:
      - postgres

  guardian:
    build: ./guardian
    container_name: canonika_guardian
    ports:
      - "7730:80"
    depends_on:
      - postgres

  echo:
    build: ./echo
    container_name: canonika_echo
    ports:
      - "7731:80"
    depends_on:
      - elasticsearch
      - kibana
      - n8n

volumes:
  pgdata: 